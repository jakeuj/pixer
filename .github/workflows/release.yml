name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.0.2)'
        required: true
        default: 'v0.0.2'

permissions:
  contents: write
  actions: read

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            ext: .exe
            python_cmd: python
          - os: macos-latest
            platform: darwin
            arch: x64
            ext: ''
            python_cmd: python3

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          ${{ matrix.python_cmd }} -m pip install --upgrade pip
          ${{ matrix.python_cmd }} -m pip install Pillow PyInstaller

      - name: Install Node.js dependencies
        run: npm install

      - name: Create Python standalone executable
        run: |
          # 建立 Python 獨立執行檔
          pyinstaller --onefile --distpath ./python-dist --name upload upload.py
          pyinstaller --onefile --distpath ./python-dist --name firmware_upgrade firmware_upgrade.py





      - name: Build Electron app
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pixer-controller-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: Pixer Controller ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## Pixer Controller Release ${{ github.event.inputs.version || github.ref_name }}

            ### 功能特色
            - 🖼️ 圖形化使用者介面
            - 📱 裝置狀態檢查（電池電量、韌體版本等）
            - 🔄 圖片上傳與進度顯示
            - 🔧 固件升級功能
            - 🔄 裝置重置功能
            - 📝 即時操作日誌

            ### 安裝說明

            #### Windows 11 x64
            1. 下載 `Pixer-Controller-Setup-*.exe`
            2. 執行安裝程式
            3. 完成安裝後即可使用

            #### macOS
            1. 下載 `Pixer-Controller-*.dmg`
            2. 開啟 DMG 檔案
            3. 將應用程式拖拽到 Applications 資料夾
            4. 首次執行時可能需要在系統偏好設定中允許執行

            ### 使用方式
            1. 確保 Pixer 裝置已開機並建立 WiFi 熱點
            2. 將電腦連接到 Pixer 的 WiFi 熱點
            3. 啟動 Pixer Controller
            4. 點擊「檢查裝置」確認連線
            5. 選擇圖片並上傳到裝置

            ### 系統需求
            - Windows 11 x64 或 macOS 10.14+
            - 無需額外安裝 Python 或其他依賴
          draft: false
          prerelease: false
          files: |
            artifacts/pixer-controller-win32-x64/*.exe
            artifacts/pixer-controller-darwin-x64/*.dmg
          fail_on_unmatched_files: false
